// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that generates a resume based on a job description.
 *
 * - generateResumeFromJd - A function that handles the resume generation process.
 * - GenerateResumeFromJdInput - The input type for the generateResumeFromJd function.
 * - GenerateResumeFromJdOutput - The return type for the generateResumeFromJd function.
 */

import {ai} from '@/ai/genkit';
import type {Resume} from '@/lib/types';
import {z} from 'genkit';

const GenerateResumeFromJdInputSchema = z.object({
  jobDescription: z.string().describe('The job description to tailor the resume to.'),
  currentResume: z.any().describe('The user\'s current resume data.'),
});
export type GenerateResumeFromJdInput = z.infer<typeof GenerateResumeFromJdInputSchema>;

const GenerateResumeFromJdOutputSchema = z.object({
  resume: z.any().describe('The generated, tailored resume.'),
});

export type GenerateResumeFromJdOutput = z.infer<typeof GenerateResumeFromJdOutputSchema>;

export async function generateResumeFromJd(
  input: GenerateResumeFromJdInput
): Promise<GenerateResumeFromJdOutput> {
  return generateResumeFromJdFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateResumeFromJdPrompt',
  input: {schema: GenerateResumeFromJdInputSchema},
  output: {schema: GenerateResumeFromJdOutputSchema},
  prompt: `You are an expert resume writer. Your task is to take the user's current resume data and a job description, and then generate a new resume that is highly tailored to the job description.

Analyze the job description for key skills, qualifications, and responsibilities. Then, rewrite the summary, and experience bullet points to highlight the most relevant aspects of the user's background. Also, generate a list of skills that are most relevant to the job description.

Return the entire resume object, with the updated fields.

Current Resume:
\`\`\`json
{{{json currentResume}}}
\`\`\`

Job Description:
\`\`\`
{{{jobDescription}}}
\`\`\`
`,
});

const generateResumeFromJdFlow = ai.defineFlow(
  {
    name: 'generateResumeFromJdFlow',
    inputSchema: GenerateResumeFromJdInputSchema,
    outputSchema: GenerateResumeFromJdOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
